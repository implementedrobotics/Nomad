ARM GAS  /tmp/ccV7ndqv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"app_freertos.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.StartDefaultTask,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	StartDefaultTask
  21              		.arch armv7e-m
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  25              		.fpu fpv4-sp-d16
  27              	StartDefaultTask:
  28              	.LVL0:
  29              	.LFB1316:
  30              		.file 1 "Core/Src/app_freertos.c"
   1:Core/Src/app_freertos.c **** /* USER CODE BEGIN Header */
   2:Core/Src/app_freertos.c **** /**
   3:Core/Src/app_freertos.c ****   ******************************************************************************
   4:Core/Src/app_freertos.c ****   * File Name          : app_freertos.c
   5:Core/Src/app_freertos.c ****   * Description        : Code for freertos applications
   6:Core/Src/app_freertos.c ****   ******************************************************************************
   7:Core/Src/app_freertos.c ****   * @attention
   8:Core/Src/app_freertos.c ****   *
   9:Core/Src/app_freertos.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Core/Src/app_freertos.c ****   * All rights reserved.</center></h2>
  11:Core/Src/app_freertos.c ****   *
  12:Core/Src/app_freertos.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/app_freertos.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/app_freertos.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/app_freertos.c ****   *                             www.st.com/SLA0044
  16:Core/Src/app_freertos.c ****   *
  17:Core/Src/app_freertos.c ****   ******************************************************************************
  18:Core/Src/app_freertos.c ****   */
  19:Core/Src/app_freertos.c **** /* USER CODE END Header */
  20:Core/Src/app_freertos.c **** 
  21:Core/Src/app_freertos.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/app_freertos.c **** #include "FreeRTOS.h"
  23:Core/Src/app_freertos.c **** #include "task.h"
  24:Core/Src/app_freertos.c **** #include "main.h"
  25:Core/Src/app_freertos.c **** #include "cmsis_os.h"
  26:Core/Src/app_freertos.c **** 
  27:Core/Src/app_freertos.c **** /* Private includes ----------------------------------------------------------*/
  28:Core/Src/app_freertos.c **** /* USER CODE BEGIN Includes */
ARM GAS  /tmp/ccV7ndqv.s 			page 2


  29:Core/Src/app_freertos.c **** #include "thread_interface.h"
  30:Core/Src/app_freertos.c **** #include "shared.h"
  31:Core/Src/app_freertos.c **** 
  32:Core/Src/app_freertos.c **** /* USER CODE END Includes */
  33:Core/Src/app_freertos.c **** 
  34:Core/Src/app_freertos.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/app_freertos.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/app_freertos.c **** 
  37:Core/Src/app_freertos.c **** /* USER CODE END PTD */
  38:Core/Src/app_freertos.c **** 
  39:Core/Src/app_freertos.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/app_freertos.c **** /* USER CODE BEGIN PD */
  41:Core/Src/app_freertos.c **** 
  42:Core/Src/app_freertos.c **** /* USER CODE END PD */
  43:Core/Src/app_freertos.c **** 
  44:Core/Src/app_freertos.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/app_freertos.c **** /* USER CODE BEGIN PM */
  46:Core/Src/app_freertos.c **** 
  47:Core/Src/app_freertos.c **** /* USER CODE END PM */
  48:Core/Src/app_freertos.c **** 
  49:Core/Src/app_freertos.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/app_freertos.c **** /* USER CODE BEGIN Variables */
  51:Core/Src/app_freertos.c **** osThreadId_t comms_task_id;   // Communications Task ID
  52:Core/Src/app_freertos.c **** osThreadId_t control_task_id; // Motor Control Task ID
  53:Core/Src/app_freertos.c **** 
  54:Core/Src/app_freertos.c **** osMessageQueueId_t uart_rx_dma_queue_id; // Message Queue to receive UART data
  55:Core/Src/app_freertos.c **** osMessageQueueId_t uart_tx_dma_queue_id; // Message Queue to transmit UART data
  56:Core/Src/app_freertos.c **** 
  57:Core/Src/app_freertos.c **** /* USER CODE END Variables */
  58:Core/Src/app_freertos.c **** /* Definitions for defaultTask */
  59:Core/Src/app_freertos.c **** osThreadId_t defaultTaskHandle;
  60:Core/Src/app_freertos.c **** const osThreadAttr_t defaultTask_attributes = {
  61:Core/Src/app_freertos.c ****   .name = "defaultTask",
  62:Core/Src/app_freertos.c ****   .priority = (osPriority_t) osPriorityNormal,
  63:Core/Src/app_freertos.c ****   .stack_size = 128 * 4
  64:Core/Src/app_freertos.c **** };
  65:Core/Src/app_freertos.c **** 
  66:Core/Src/app_freertos.c **** /* Private function prototypes -----------------------------------------------*/
  67:Core/Src/app_freertos.c **** /* USER CODE BEGIN FunctionPrototypes */
  68:Core/Src/app_freertos.c **** 
  69:Core/Src/app_freertos.c **** /* USER CODE END FunctionPrototypes */
  70:Core/Src/app_freertos.c **** 
  71:Core/Src/app_freertos.c **** void StartDefaultTask(void *argument);
  72:Core/Src/app_freertos.c **** 
  73:Core/Src/app_freertos.c **** void MX_FREERTOS_Init(void); /* (MISRA C 2004 rule 8.1) */
  74:Core/Src/app_freertos.c **** 
  75:Core/Src/app_freertos.c **** /**
  76:Core/Src/app_freertos.c ****   * @brief  FreeRTOS initialization
  77:Core/Src/app_freertos.c ****   * @param  None
  78:Core/Src/app_freertos.c ****   * @retval None
  79:Core/Src/app_freertos.c ****   */
  80:Core/Src/app_freertos.c **** void MX_FREERTOS_Init(void) {
  81:Core/Src/app_freertos.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/app_freertos.c **** 
  83:Core/Src/app_freertos.c ****   /* USER CODE END Init */
  84:Core/Src/app_freertos.c **** 
  85:Core/Src/app_freertos.c ****   /* USER CODE BEGIN RTOS_MUTEX */
ARM GAS  /tmp/ccV7ndqv.s 			page 3


  86:Core/Src/app_freertos.c ****   /* add mutexes, ... */
  87:Core/Src/app_freertos.c ****   /* USER CODE END RTOS_MUTEX */
  88:Core/Src/app_freertos.c **** 
  89:Core/Src/app_freertos.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
  90:Core/Src/app_freertos.c ****   /* add semaphores, ... */
  91:Core/Src/app_freertos.c ****   /* USER CODE END RTOS_SEMAPHORES */
  92:Core/Src/app_freertos.c **** 
  93:Core/Src/app_freertos.c ****   /* USER CODE BEGIN RTOS_TIMERS */
  94:Core/Src/app_freertos.c ****   /* start timers, add new ones, ... */
  95:Core/Src/app_freertos.c ****   /* USER CODE END RTOS_TIMERS */
  96:Core/Src/app_freertos.c **** 
  97:Core/Src/app_freertos.c ****   /* USER CODE BEGIN RTOS_QUEUES */
  98:Core/Src/app_freertos.c ****   
  99:Core/Src/app_freertos.c ****   /* USER CODE END RTOS_QUEUES */
 100:Core/Src/app_freertos.c **** 
 101:Core/Src/app_freertos.c ****   /* Create the thread(s) */
 102:Core/Src/app_freertos.c ****   /* creation of defaultTask */
 103:Core/Src/app_freertos.c ****   defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 104:Core/Src/app_freertos.c **** 
 105:Core/Src/app_freertos.c ****   /* USER CODE BEGIN RTOS_THREADS */
 106:Core/Src/app_freertos.c ****   /* add threads, ... */
 107:Core/Src/app_freertos.c ****   /* USER CODE END RTOS_THREADS */
 108:Core/Src/app_freertos.c **** 
 109:Core/Src/app_freertos.c **** }
 110:Core/Src/app_freertos.c **** 
 111:Core/Src/app_freertos.c **** /* USER CODE BEGIN Header_StartDefaultTask */
 112:Core/Src/app_freertos.c **** /**
 113:Core/Src/app_freertos.c ****   * @brief  Function implementing the defaultTask thread.
 114:Core/Src/app_freertos.c ****   * @param  argument: Not used
 115:Core/Src/app_freertos.c ****   * @retval None
 116:Core/Src/app_freertos.c ****   */
 117:Core/Src/app_freertos.c **** /* USER CODE END Header_StartDefaultTask */
 118:Core/Src/app_freertos.c **** void StartDefaultTask(void *argument)
 119:Core/Src/app_freertos.c **** {
  31              		.loc 1 119 1 view -0
  32              		.cfi_startproc
  33              		@ Volatile: function does not return.
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
 120:Core/Src/app_freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
 121:Core/Src/app_freertos.c **** 
 122:Core/Src/app_freertos.c ****   // Start Comms Task
 123:Core/Src/app_freertos.c ****   osThreadNew(uart_rx_dma_thread, NULL, NULL);
  36              		.loc 1 123 3 view .LVU1
  37 0000 0022     		movs	r2, #0
 119:Core/Src/app_freertos.c ****   /* USER CODE BEGIN StartDefaultTask */
  38              		.loc 1 119 1 is_stmt 0 view .LVU2
  39 0002 08B5     		push	{r3, lr}
  40              	.LCFI0:
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 3, -8
  43              		.cfi_offset 14, -4
  44              		.loc 1 123 3 view .LVU3
  45 0004 1146     		mov	r1, r2
  46 0006 0248     		ldr	r0, .L4
  47              	.LVL1:
  48              		.loc 1 123 3 view .LVU4
ARM GAS  /tmp/ccV7ndqv.s 			page 4


  49 0008 FFF7FEFF 		bl	osThreadNew
  50              	.LVL2:
 124:Core/Src/app_freertos.c **** 
 125:Core/Src/app_freertos.c ****   // Start Motor Control Task
 126:Core/Src/app_freertos.c **** 
 127:Core/Src/app_freertos.c ****   osThreadExit(); // Terminate default thread.  We have launched all the relevant ones
  51              		.loc 1 127 3 is_stmt 1 view .LVU5
  52 000c FFF7FEFF 		bl	osThreadExit
  53              	.LVL3:
  54              	.L5:
  55              		.align	2
  56              	.L4:
  57 0010 00000000 		.word	uart_rx_dma_thread
  58              		.cfi_endproc
  59              	.LFE1316:
  61              		.section	.text.MX_FREERTOS_Init,"ax",%progbits
  62              		.align	1
  63              		.p2align 2,,3
  64              		.global	MX_FREERTOS_Init
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  68              		.fpu fpv4-sp-d16
  70              	MX_FREERTOS_Init:
  71              	.LFB1315:
  80:Core/Src/app_freertos.c ****   /* USER CODE BEGIN Init */
  72              		.loc 1 80 29 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
 103:Core/Src/app_freertos.c **** 
  76              		.loc 1 103 3 view .LVU7
  80:Core/Src/app_freertos.c ****   /* USER CODE BEGIN Init */
  77              		.loc 1 80 29 is_stmt 0 view .LVU8
  78 0000 08B5     		push	{r3, lr}
  79              	.LCFI1:
  80              		.cfi_def_cfa_offset 8
  81              		.cfi_offset 3, -8
  82              		.cfi_offset 14, -4
 103:Core/Src/app_freertos.c **** 
  83              		.loc 1 103 23 view .LVU9
  84 0002 044A     		ldr	r2, .L8
  85 0004 0448     		ldr	r0, .L8+4
  86 0006 0021     		movs	r1, #0
  87 0008 FFF7FEFF 		bl	osThreadNew
  88              	.LVL4:
 103:Core/Src/app_freertos.c **** 
  89              		.loc 1 103 21 view .LVU10
  90 000c 034B     		ldr	r3, .L8+8
  91 000e 1860     		str	r0, [r3]
 109:Core/Src/app_freertos.c **** 
  92              		.loc 1 109 1 view .LVU11
  93 0010 08BD     		pop	{r3, pc}
  94              	.L9:
  95 0012 00BF     		.align	2
  96              	.L8:
  97 0014 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccV7ndqv.s 			page 5


  98 0018 00000000 		.word	StartDefaultTask
  99 001c 00000000 		.word	defaultTaskHandle
 100              		.cfi_endproc
 101              	.LFE1315:
 103              		.global	defaultTask_attributes
 104              		.section	.rodata.str1.4,"aMS",%progbits,1
 105              		.align	2
 106              	.LC0:
 107 0000 64656661 		.ascii	"defaultTask\000"
 107      756C7454 
 107      61736B00 
 108              		.comm	defaultTaskHandle,4,4
 109              		.comm	uart_tx_dma_buffer,64,4
 110              		.comm	uart_rx_dma_buffer,64,4
 111              		.comm	uart_tx_dma_queue_id,4,4
 112              		.comm	uart_rx_dma_queue_id,4,4
 113              		.comm	control_task_id,4,4
 114              		.comm	comms_task_id,4,4
 115              		.section	.rodata.defaultTask_attributes,"a"
 116              		.align	2
 117              		.set	.LANCHOR0,. + 0
 120              	defaultTask_attributes:
 121 0000 00000000 		.word	.LC0
 122 0004 00000000 		.space	16
 122      00000000 
 122      00000000 
 122      00000000 
 123 0014 00020000 		.word	512
 124 0018 18000000 		.word	24
 125 001c 00000000 		.space	8
 125      00000000 
 126              		.text
 127              	.Letext0:
 128              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 129              		.file 3 "Core/Inc/FreeRTOSConfig.h"
 130              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 131              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 132              		.file 6 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 133              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_flash.h"
 134              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 135              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_dma.h"
 136              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_ll_usart.h"
 137              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 138              		.file 12 "Core/Inc/shared.h"
ARM GAS  /tmp/ccV7ndqv.s 			page 6


DEFINED SYMBOLS
                            *ABS*:0000000000000000 app_freertos.c
     /tmp/ccV7ndqv.s:18     .text.StartDefaultTask:0000000000000000 $t
     /tmp/ccV7ndqv.s:27     .text.StartDefaultTask:0000000000000000 StartDefaultTask
     /tmp/ccV7ndqv.s:57     .text.StartDefaultTask:0000000000000010 $d
     /tmp/ccV7ndqv.s:62     .text.MX_FREERTOS_Init:0000000000000000 $t
     /tmp/ccV7ndqv.s:70     .text.MX_FREERTOS_Init:0000000000000000 MX_FREERTOS_Init
     /tmp/ccV7ndqv.s:97     .text.MX_FREERTOS_Init:0000000000000014 $d
                            *COM*:0000000000000004 defaultTaskHandle
     /tmp/ccV7ndqv.s:120    .rodata.defaultTask_attributes:0000000000000000 defaultTask_attributes
     /tmp/ccV7ndqv.s:105    .rodata.str1.4:0000000000000000 $d
                            *COM*:0000000000000040 uart_tx_dma_buffer
                            *COM*:0000000000000040 uart_rx_dma_buffer
                            *COM*:0000000000000004 uart_tx_dma_queue_id
                            *COM*:0000000000000004 uart_rx_dma_queue_id
                            *COM*:0000000000000004 control_task_id
                            *COM*:0000000000000004 comms_task_id
     /tmp/ccV7ndqv.s:116    .rodata.defaultTask_attributes:0000000000000000 $d

UNDEFINED SYMBOLS
osThreadNew
osThreadExit
uart_rx_dma_thread
